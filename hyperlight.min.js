(f=>f((n,v)=>Object.defineProperty(window,n,{configurable:!0,writable:!0,value:v})))(d=>{'use strict';function safeEval(c,...a){try{const f=eval(c);if("function"!=typeof f)throw new Error("Code must be the body of a function");return f.call(this,...a)}catch(e){console.error("[Hyperlight] Error in evaluation:",e)}}function m(e){if("lazyload"===e&&(this.removeAttribute("lazyload"),this.setAttribute("decoding","async"),this.setAttribute("loading","lazy")),"eval"===e){const e=this.getAttribute("eval");this.removeAttribute("eval"),safeEval.apply(this,["(function(){"+e+"})"])}if(e.startsWith("$")){const t=this.getAttribute(e),o=e.slice(1),s=safeEval.apply(this,["(function(){return `"+t+"`})"]);this.removeAttribute(e);this.setAttribute(o,s)}if(!e.startsWith("s."))return;const t=this.getAttribute(e),o=e.substring(2),s=safeEval.apply(this,["(function(){return `"+t+"`})"]);this.removeAttribute(e);this.style.setProperty(o,s)}class O extends MutationObserver{#e;constructor(e=!0){super(e=>e.forEach(e=>e.addedNodes.forEach(1===e.nodeType&&e.getAttributeNames().forEach(m,e)))),this.#e=e,this.open()}close(){this.disconnect()}open(){this.observe(document,{childList:!0,subtree:!0})}get autoClose(){return this.#e}set autoClose(e){this.#e=!0===e}}class I{#t;constructor(){this.#t=new O(),document.addEventListener("DOMContentLoaded",()=>window.HyperLight.autoCloseObserver&&window.HyperLight.closeObserver()),this.#t.open()}closeObserver(){this.#t.close()}openObserver(){this.#t.open()}get autoCloseObserver(){return this.#t.autoClose}set autoCloseObserver(e){this.#t.autoClose=e}save(e,t){window.localStorage.setItem(e,t)}get(e){return window.localStorage.getItem(e)}rm(e){const t=null!==window.sessionStorage.getItem(e);return window.sessionStorage.removeItem(e),t}}d("HyperLight",new I());});